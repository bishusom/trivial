function initWordGame(){var e=(()=>{var e=localStorage.getItem("wordLadderGameState");if(e)try{var t=JSON.parse(e);if(["easy","medium","hard"].includes(t.difficulty)&&"number"==typeof t.consecutiveWins&&"number"==typeof t.currentLevel)return t}catch(e){console.error("Invalid saved game state",e)}return null})();let c=e?.difficulty||"easy",d=e?.consecutiveWins||0,i=e?.currentLevel||1,l=0,u=0,E=null,m={wordLength:{easy:5,medium:6,hard:7},timeLimit:{easy:300,medium:240,hard:180},scorePerStep:{easy:50,medium:75,hard:100},bonusPerSecond:5,maxHints:3},f={4:["COLD","WARM","CORD","CARD","WARD","WORD","WORM","FARM","FIRE","FIVE","FINE","LINE","LION","LOAN","LOIN","RAIN","MAIN","MAID","MILD","MIND","BAND","LAND","SAND","HAND","FANS","PANS","TANS","CANS","BANS","RING","SING","WING","KING","PING","BONG","SONG","LONG","TONG","GONE","CONE","BONE","TONE","HONE","LOVE","MOVE","COVE","DOVE","ROVE","SAVE","WAVE","CAVE","GAVE","HAVE","LIVE","GIVE","DIVE","HIVE","JIVE","BARK","PARK","DARK","LARK","MARK","CAKE","FAKE","LAKE","MAKE","RAKE","TAKE","WAKE","SNAKE","STAKE","BALE","GALE","MALE","PALE","SALE"],5:["APPLE","AMPLY","AMBLE","ABLED","ABIDE","BRICK","TRICK","QUICK","SLICK","FLICK","CLICK","STICK","THICK","PRICK","CRACK","TRACK","STACK","BLACK","SLACK","SNACK","RINGS","SINGS","WINGS","KINGS","PINGS","BLOOM","GLOOM","BROOM","ROOMY","DOOMY","FLOOD","BLOOD","MOODY","GOODY","CANDY","HANDY","SANDY","BANDY","RANDY","SHINE","SPINE","TWINE","VINEY","WINEY","CLONE","DRONE","PRONE","STONE","PHONE","ALONE","BONES","CONES","TONES","HONES","ZONES","LOVES","MOVES","COVES","DOVES","ROVES","SAVES","WAVES","CAVES","GIVES","LIVES"],6:["CANNON","CANTON","CANTOR","CAPTOR","BLOOMS","GLOOMS","BROOMS","ROOMS","DOOMS","FLOODS","BLOODS","MOODS","GOODS","HOODS","WOODS","STANDS","BRANDS","GRANDS","HANDS","LANDS","SANDS","SHINES","SPINES","VINES","WINES","LINES","MINES","PINES","FINES","DINES","CLONES","DRONES","PRONES","STONES","PHONES","ZONES","ALONES","CONING","COMING","HOMING","FARMER","HARMER","WARMER","MARKET","PARKET","TICKET","PICKET","WICKET","CRYPTO","SCRIPT","BRIGHT","FLIGHT","SLIGHT","PLIGHT","NIGHTS","LIGHTS"]},S="",N="",O="",A=[],v=new Set,I=new Set,o=new Map,a=0,s=!1,r=-1,n={select:new Audio("/audio/click.mp3"),found:new Audio("/audio/correct.mp3"),win:new Audio("/audio/win.mp3"),error:new Audio("/audio/wrong.mp3")},L=JSON.parse(localStorage.getItem("triviaMasterMuteState"))||!1,g=document.getElementById("current-word-display"),h=document.getElementById("letter-tiles"),C=document.getElementById("word-ladder-list"),p=document.getElementById("word-ladder-feedback");var e=document.getElementById("word-ladder-new"),B=document.getElementById("word-ladder-hint");let W=document.getElementById("word-ladder-time")||((w=document.createElement("div")).id="word-ladder-time",w.className="word-game-timer",document.querySelector(".word-game-meta")?.appendChild(w),w),b=document.getElementById("word-ladder-score"),V=document.getElementById("word-ladder-level"),x=document.getElementById("start-word"),F=document.getElementById("end-word"),t=document.querySelector("#mute-btn .material-icons");var w=document.getElementById("mute-btn");function M(t){L?console.log(`Sound ${t} skipped: muted`):(console.log("Playing sound: "+t),n[t]&&(n[t].currentTime=0,n[t].play().catch(e=>console.error(`Error playing ${t} sound:`,e))))}function $(){Object.keys(n).forEach(e=>{e=e,n[e]&&(n[e].pause(),n[e].currentTime=0)})}function R(e,t,n,r){"undefined"!=typeof gtag&&gtag("event",e,{event_category:t,event_label:n,value:r})}async function T(){console.log("Initializing Word Ladder game with state:",{difficulty:c,currentLevel:i,consecutiveWins:d}),p.innerHTML=`
      <div class="loading-animation">
        <div class="loading-spinner"></div>
        <div class="loading-text">Creating your puzzle</div>
        <div class="loading-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,p.className="word-feedback info",clearInterval(E),u=m.timeLimit[c],l=0,A=[],v.clear(),o.clear(),a=0,s=!0,r=-1,g.innerHTML="",h.innerHTML="",P(C.innerHTML="","info"),G(),Y(),H();let t=m.wordLength[c];try{var e=t;if(console.log("Fetching word ladder from Firebase..."),(e=await db.collection("wordLadders").where("length","==",e).where("difficulty","==",c).limit(100).get()).empty)throw new Error("No ladders found");e=(e=e.docs.map(e=>e.data()))[Math.floor(Math.random()*e.length)],S=e.startWord.toUpperCase(),N=e.endWord.toUpperCase(),O=S,A=[S],v=new Set([S]),x.textContent=S,F.textContent=N,y(),K(),window.currentSolutionPath=e.path.map(e=>e.toUpperCase())}catch(e){console.error("Error using Firebase words:",e),p.innerHTML=`
      <div class="error-animation">
        <div class="error-icon">‚ö†Ô∏è</div>
        <div class="loading-text">Setting up the board</div>
        <div class="loading-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,p.className="word-feedback error",setTimeout(()=>{(async e=>{let t=f[e],n=!1,r=0;for(;!n&&r<50;){if(0===(await _(S=t[Math.floor(Math.random()*t.length)])).length);else{var o,a,d,i=[];for(o of t)o!==S&&(a=await(async(e,t,n)=>{if(((t,n)=>{let r=0;for(let e=0;e<t.length;e++)if(t[e]!==n[e]&&r++,1<r)return;return 1===r})(e,t))return[e,t];let r=[[e]],o=new Set([e]),a=0;for(;0<r.length&&a<1e3;){a++;var d,i=r.shift(),l=i[i.length-1];if(l===t)return i.length-1>=n?i:null;for(d of await _(l))o.has(d)||(o.add(d),r.push([...i,d]))}return null})(S,o,2))&&3<=a.length&&i.push(o);0<i.length&&(N=i[Math.floor(Math.random()*i.length)],d=S+"-"+N,I.has(d)||(n=!0,I.add(d)))}r++}if(!n){var l;for(l of{4:[["COLD","CORD","CARD","WARD","WARM"],["FIRE","FIVE","FINE","LINE","LION"]],5:[["APPLE","AMPLY","AMBLE","ABLED","ABIDE"],["BRICK","TRICK","TRACK","TRUCK","TRUNK"]],6:[["CANNON","CANTON","CANTOR","CAPTOR"],["FARMER","HARMER","HAMMER","HUMMER","HUMPER"]]}[e]||[]){var s=l[0]+"-"+l[l.length-1];if(!I.has(s)){S=l[0],N=l[l.length-1],I.add(s),n=!0;break}}n||(S=f[e][0],N=f[e][1])}O=S,A.push(S),v.add(S),x.textContent=S,F.textContent=N,y(),D(),K(),clearInterval(E),u=m.timeLimit[c],H(),E=setInterval(()=>{u--,H()},1e3),P("Game started! Transform the start word to the end word.","info"),R("word_ladder_game_started","word_ladder","start",1)})(t).catch(()=>{p.innerHTML=`
      <div class="error-animation">
        <div class="error-icon">‚ùå</div>
        <div>Having trouble loading</div>
        <button class="btn primary" onclick="initWordGame()">Try Again</button>
      </div>
    `,p.className="word-feedback error"})},2e3)}}function y(){g.innerHTML="";for(let e=0;e<O.length;e++){var t=document.createElement("span");t.textContent=O[e],t.classList.add("letter-tile"),e===r&&t.classList.add("selected"),t.addEventListener("click",()=>{k(e)}),g.appendChild(t)}}function D(){if(h.innerHTML="",-1!==r)for(let e of"ABCDEFGHIJKLMNOPQRSTUVWXYZ"){var t=document.createElement("div");t.textContent=e,t.classList.add("letter-tile"),t.addEventListener("click",()=>{(async e=>{var t,n;if(-1!==r&&s&&await(async r=>{if(s)if(r.length!==O.length)P(`Word must be ${O.length} letters long`,"error");else if(r===O)P("Word must be different from current word","error");else if(v.has(r))P("Word already used in this ladder","error");else{let t=0;for(let e=0;e<O.length;e++)if(O[e]!==r[e]&&t++,1<t)return P("Only one letter can be changed at a time","error"),!1;let n=!1;if(o.has(r.toLowerCase()))n=o.get(r.toLowerCase());else try{var e=await fetch("https://api.dictionaryapi.dev/api/v2/entries/en/"+r.toLowerCase());n=e.ok,o.set(r.toLowerCase(),n)}catch(e){n=f[r.length].includes(r.toUpperCase()),o.set(r.toLowerCase(),n)}if(n)return!0;P("Not a valid English word","error")}return!1})(e=O.substring(0,r)+e+O.substring(r+1))){if(O=e,A.push(e),v.add(e),t=m.scorePerStep[c],l+=t,G(),K(),M("found"),e===N){n=u*m.bonusPerSecond,l+=n,G(),clearInterval(E),s=!1,P(`You won! +${t} points + ${n} time bonus`,"success"),M("win"),R("word_ladder_won","word_ladder","win",l);{d++;let e="",t=!1,n=(3<=d?(e="easy"===c?(c="medium",t=!0,"üéâ Advanced to Medium level! üéâ"):"medium"===c?(c="hard",t=!0,"üéâ Advanced to Hard level! üéâ"):"üéâ Mastered Hard level! Continuing at max difficulty. üéâ",t&&(d=0,setTimeout(()=>U({particleCount:200,spread:100}),1e3))):e=`üéâ Level ${i} Complete! üéâ`,document.createElement("div")),r=(n.className="victory-screen",n.innerHTML=`
      <h2>Victory!</h2>
      <p>${e}</p>
      <p>Words Used: ${A.length}</p>
      <p>Score: ${l}</p>
      <div class="countdown">Proceeding to the next level in 5...</div>
    `,document.body.appendChild(n),U(),5),o=n.querySelector(".countdown"),a=setInterval(()=>{var e;r--,o.textContent=`Proceeding to the next level in ${r}...`,r<=0&&(clearInterval(a),n.remove(),i++,e={difficulty:c,consecutiveWins:d,currentLevel:i},localStorage.setItem("wordLadderGameState",JSON.stringify(e)),Y(),T())},1e3);R("level_complete","word_ladder",c,l)}}else P(`Valid: ${e} (+${t} points)`,"success");r=-1,y(),D()}})(e)}),h.appendChild(t)}}function k(e){r=e,M("select"),y(),D()}function K(){C.innerHTML="",A.forEach(e=>{var t=document.createElement("li");t.textContent=e,C.appendChild(t)})}function G(){b.textContent="Score: "+l}function Y(){V.textContent=`Level: ${i} (${c})`}function H(){var e=Math.floor(u/60),t=u%60;W.textContent=`Time: ${e}:`+t.toString().padStart(2,"0"),u<=0&&s&&(clearInterval(E),s=!1,P("Time's up!","error"),M("error"),setTimeout(T,2e3))}function P(e,t){p.textContent=e,p.className="word-feedback "+t,"error"===t&&M("error")}async function _(n){var r,e=[],t=n.length;for(r of f[t]){let t=0;for(let e=0;e<n.length&&(n[e]!==r[e]&&t++,!(1<t));e++);1===t&&e.push(r)}return e}function U(e={}){let t={particleCount:100,spread:70,origin:{y:.6},colors:["#ff0000","#00ff00","#0000ff","#ffff00","#ff00ff","#00ffff"]};confetti({...t,...e}),.5<Math.random()&&setTimeout(()=>{confetti({...t,...e,angle:180*Math.random()-90,origin:{x:Math.random(),y:.6}})},300)}T(),L=JSON.parse(localStorage.getItem("triviaMasterMuteState"))||!1,t&&(t.textContent=L?"volume_off":"volume_up"),L&&$(),e.addEventListener("click",()=>{I.clear(),T()}),B.addEventListener("click",async function(){if(!s||a>=m.maxHints)P("No more hints available","error");else{var e=window.currentSolutionPath.indexOf(O);if(-1===e||e>=window.currentSolutionPath.length-1)P("No hints available for this step","error");else{var n,r,o=window.currentSolutionPath[e+1];let t=-1;for(let e=0;e<O.length;e++)if(O[e]!==o[e]){t=e;break}a++,-1!==t?(k(t),P(`Change ${e=t+1,n=["th","st","nd","rd"],r=e%100,e+(n[(r-20)%10]||n[r]||n[0])} letter to ${o[t]} (‚Üí ${o})`,"info")):P("Next step: "+o,"info")}}}),w&&w.addEventListener("click",()=>{L=!L,localStorage.setItem("triviaMasterMuteState",L),t&&(t.textContent=L?"volume_off":"volume_up"),L&&$(),M("select")}),document.addEventListener("DOMContentLoaded",()=>{initWordGame()})}export{initWordGame};
