function initWordGame(){var e=(()=>{var e=localStorage.getItem("wordLadderGameState");if(e)try{var t=JSON.parse(e);if(["easy","medium","hard"].includes(t.difficulty)&&"number"==typeof t.consecutiveWins&&"number"==typeof t.currentLevel)return t}catch(e){console.error("Invalid saved game state",e)}return null})();let d=e?.difficulty||"easy",i=e?.consecutiveWins||0,l=e?.currentLevel||1,s=0,n=0,o=null,a={wordLength:{easy:5,medium:6,hard:7},timeLimit:{easy:300,medium:240,hard:180},scorePerStep:{easy:50,medium:75,hard:100},bonusPerSecond:5,maxHints:3},c={4:["COLD","WARM","CORD","CARD","WARD","WORD","WORM","FARM","FIRE","FIVE","FINE","LINE","LION","LOAN","LOIN","RAIN","MAIN","MAID","MILD","MIND","BAND","LAND","SAND","HAND","FANS","PANS","TANS","CANS","BANS","RING","SING","WING","KING","PING","BONG","SONG","LONG","TONG","GONE","CONE","BONE","TONE","HONE","LOVE","MOVE","COVE","DOVE","ROVE","SAVE","WAVE","CAVE","GAVE","HAVE","LIVE","GIVE","DIVE","HIVE","JIVE","BARK","PARK","DARK","LARK","MARK","CAKE","FAKE","LAKE","MAKE","RAKE","TAKE","WAKE","SNAKE","STAKE","BALE","GALE","MALE","PALE","SALE"],5:["APPLE","AMPLY","AMBLE","ABLED","ABIDE","BRICK","TRICK","QUICK","SLICK","FLICK","CLICK","STICK","THICK","PRICK","CRACK","TRACK","STACK","BLACK","SLACK","SNACK","RINGS","SINGS","WINGS","KINGS","PINGS","BLOOM","GLOOM","BROOM","ROOMY","DOOMY","FLOOD","BLOOD","MOODY","GOODY","CANDY","HANDY","SANDY","BANDY","RANDY","SHINE","SPINE","TWINE","VINEY","WINEY","CLONE","DRONE","PRONE","STONE","PHONE","ALONE","BONES","CONES","TONES","HONES","ZONES","LOVES","MOVES","COVES","DOVES","ROVES","SAVES","WAVES","CAVES","GIVES","LIVES"],6:["CANNON","CANTON","CANTOR","CAPTOR","BLOOMS","GLOOMS","BROOMS","ROOMS","DOOMS","FLOODS","BLOODS","MOODS","GOODS","HOODS","WOODS","STANDS","BRANDS","GRANDS","HANDS","LANDS","SANDS","SHINES","SPINES","VINES","WINES","LINES","MINES","PINES","FINES","DINES","CLONES","DRONES","PRONES","STONES","PHONES","ZONES","ALONES","CONING","COMING","HOMING","FARMER","HARMER","WARMER","MARKET","PARKET","TICKET","PICKET","WICKET","CRYPTO","SCRIPT","BRIGHT","FLIGHT","SLIGHT","PLIGHT","NIGHTS","LIGHTS"]},u="",E="",m="",f=[],N=new Set,S=new Set,O=new Map,h=0,v=!1,A=-1,r={select:new Audio("/audio/click.mp3"),found:new Audio("/audio/correct.mp3"),win:new Audio("/audio/win.mp3"),error:new Audio("/audio/wrong.mp3")},g=JSON.parse(localStorage.getItem("triviaMasterMuteState"))||!1,I=document.getElementById("current-word-display"),L=document.getElementById("letter-tiles"),C=document.getElementById("word-ladder-list"),p=document.getElementById("word-ladder-feedback");var e=document.getElementById("word-ladder-new"),B=document.getElementById("word-ladder-hint");let P=document.getElementById("word-ladder-time")||((w=document.createElement("div")).id="word-ladder-time",w.className="word-game-timer",document.querySelector(".word-game-meta")?.appendChild(w),w),b=document.getElementById("word-ladder-score"),V=document.getElementById("word-ladder-level"),x=document.getElementById("start-word"),F=document.getElementById("end-word"),t=document.querySelector("#mute-btn .material-icons");var w=document.getElementById("mute-btn");function M(t){g?console.log(`Sound ${t} skipped: muted`):(console.log("Playing sound: "+t),r[t]&&(r[t].currentTime=0,r[t].play().catch(e=>console.error(`Error playing ${t} sound:`,e))))}function _(){Object.keys(r).forEach(e=>{e=e,r[e]&&(r[e].pause(),r[e].currentTime=0)})}function R(e,t,r,n){"undefined"!=typeof gtag&&gtag("event",e,{event_category:t,event_label:r,value:n})}async function T(){console.log("Initializing Word Ladder game with state:",{difficulty:d,currentLevel:l,consecutiveWins:i}),p.innerHTML=`
      <div class="loading-animation">
        <div class="loading-spinner"></div>
        <div class="loading-text">Creating your puzzle</div>
        <div class="loading-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,p.className="word-feedback info",clearInterval(o),n=a.timeLimit[d],s=0,f=[],N.clear(),O.clear(),h=0,v=!0,A=-1,I.innerHTML="",L.innerHTML="",W(C.innerHTML="","info"),K(),Y(),H();let t=a.wordLength[d];try{var e=t;if(console.log("Fetching fb db for wordLength ",e),(e=await db.collection("wordLadders").where("length","==",e).limit(50).get()).empty)throw new Error("No word pairs found in Firebase");if(0===(e=e.docs.map(e=>{e=e.data();return{startWord:e.startWord?.toUpperCase(),endWord:e.endWord?.toUpperCase()}}).filter(e=>e.startWord&&e.endWord)).length)throw new Error("No valid word pairs in Firebase");var r=(e=e[Math.floor(Math.random()*e.length)]).startWord+"-"+e.endWord;if(S.has(r))throw new Error("Pair already used");S.add(r),u=e.startWord,E=e.endWord,m=u,f.push(u),N.add(u),x.textContent=u,F.textContent=E,y(),D(),G(),$(),W("Game started! Transform the start word to the end word.","info"),R("word_ladder_game_started","word_ladder","start",1)}catch(e){console.error("Error using Firebase words:",e),p.innerHTML=`
      <div class="error-animation">
        <div class="error-icon">‚ö†Ô∏è</div>
        <div class="loading-text">Setting up the board</div>
        <div class="loading-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,p.className="word-feedback error",setTimeout(()=>{(async e=>{let t=c[e],r=!1,n=0;for(;!r&&n<50;){if(0===(await U(u=t[Math.floor(Math.random()*t.length)])).length);else{var o,a,d,i=[];for(o of t)o!==u&&(a=await(async(e,t,r)=>{if(((t,r)=>{let n=0;for(let e=0;e<t.length;e++)if(t[e]!==r[e]&&n++,1<n)return;return 1===n})(e,t))return[e,t];let n=[[e]],o=new Set([e]),a=0;for(;0<n.length&&a<1e3;){a++;var d,i=n.shift(),l=i[i.length-1];if(l===t)return i.length-1>=r?i:null;for(d of await U(l))o.has(d)||(o.add(d),n.push([...i,d]))}return null})(u,o,2))&&3<=a.length&&i.push(o);0<i.length&&(E=i[Math.floor(Math.random()*i.length)],d=u+"-"+E,S.has(d)||(r=!0,S.add(d)))}n++}if(!r){var l;for(l of{4:[["COLD","CORD","CARD","WARD","WARM"],["FIRE","FIVE","FINE","LINE","LION"]],5:[["APPLE","AMPLY","AMBLE","ABLED","ABIDE"],["BRICK","TRICK","TRACK","TRUCK","TRUNK"]],6:[["CANNON","CANTON","CANTOR","CAPTOR"],["FARMER","HARMER","HAMMER","HUMMER","HUMPER"]]}[e]||[]){var s=l[0]+"-"+l[l.length-1];if(!S.has(s)){u=l[0],E=l[l.length-1],S.add(s),r=!0;break}}r||(u=c[e][0],E=c[e][1])}m=u,f.push(u),N.add(u),x.textContent=u,F.textContent=E,y(),D(),G(),$(),W("Game started! Transform the start word to the end word.","info"),R("word_ladder_game_started","word_ladder","start",1)})(t).catch(()=>{p.innerHTML=`
      <div class="error-animation">
        <div class="error-icon">‚ùå</div>
        <div>Having trouble loading</div>
        <button class="btn primary" onclick="initWordGame()">Try Again</button>
      </div>
    `,p.className="word-feedback error"})},2e3)}}function y(){I.innerHTML="";for(let e=0;e<m.length;e++){var t=document.createElement("span");t.textContent=m[e],t.classList.add("letter-tile"),e===A&&t.classList.add("selected"),t.addEventListener("click",()=>{k(e)}),I.appendChild(t)}}function D(){if(L.innerHTML="",-1!==A)for(let e of"ABCDEFGHIJKLMNOPQRSTUVWXYZ"){var t=document.createElement("div");t.textContent=e,t.classList.add("letter-tile"),t.addEventListener("click",()=>{(async e=>{var t,r;if(-1!==A&&v&&await(async n=>{if(v)if(n.length!==m.length)W(`Word must be ${m.length} letters long`,"error");else if(n===m)W("Word must be different from current word","error");else if(N.has(n))W("Word already used in this ladder","error");else{let t=0;for(let e=0;e<m.length;e++)if(m[e]!==n[e]&&t++,1<t)return W("Only one letter can be changed at a time","error"),!1;let r=!1;if(O.has(n.toLowerCase()))r=O.get(n.toLowerCase());else try{var e=await fetch("https://api.dictionaryapi.dev/api/v2/entries/en/"+n.toLowerCase());r=e.ok,O.set(n.toLowerCase(),r)}catch(e){r=c[n.length].includes(n.toUpperCase()),O.set(n.toLowerCase(),r)}if(r)return!0;W("Not a valid English word","error")}return!1})(e=m.substring(0,A)+e+m.substring(A+1))){if(m=e,f.push(e),N.add(e),t=a.scorePerStep[d],s+=t,K(),G(),M("found"),e===E){r=n*a.bonusPerSecond,s+=r,K(),clearInterval(o),v=!1,W(`You won! +${t} points + ${r} time bonus`,"success"),M("win"),R("word_ladder_won","word_ladder","win",s);{i++;let e="",t=!1,r=(3<=i?(e="easy"===d?(d="medium",t=!0,"üéâ Advanced to Medium level! üéâ"):"medium"===d?(d="hard",t=!0,"üéâ Advanced to Hard level! üéâ"):"üéâ Mastered Hard level! Continuing at max difficulty. üéâ",t&&(i=0,setTimeout(()=>J({particleCount:200,spread:100}),1e3))):e=`üéâ Level ${l} Complete! üéâ`,document.createElement("div")),n=(r.className="victory-screen",r.innerHTML=`
      <h2>Victory!</h2>
      <p>${e}</p>
      <p>Words Used: ${f.length}</p>
      <p>Score: ${s}</p>
      <div class="countdown">Proceeding to the next level in 5...</div>
    `,document.body.appendChild(r),J(),5),o=r.querySelector(".countdown"),a=setInterval(()=>{var e;n--,o.textContent=`Proceeding to the next level in ${n}...`,n<=0&&(clearInterval(a),r.remove(),l++,e={difficulty:d,consecutiveWins:i,currentLevel:l},localStorage.setItem("wordLadderGameState",JSON.stringify(e)),Y(),T())},1e3);R("level_complete","word_ladder",d,s)}}else W(`Valid: ${e} (+${t} points)`,"success");A=-1,y(),D()}})(e)}),L.appendChild(t)}}function k(e){A=e,M("select"),y(),D()}function G(){C.innerHTML="",f.forEach(e=>{var t=document.createElement("li");t.textContent=e,C.appendChild(t)})}function K(){b.textContent="Score: "+s}function Y(){V.textContent=`Level: ${l} (${d})`}function H(){var e=Math.floor(n/60),t=n%60;P.textContent=`Time: ${e}:`+t.toString().padStart(2,"0"),n<=0&&v&&(clearInterval(o),v=!1,W("Time's up!","error"),M("error"),setTimeout(T,2e3))}function $(){clearInterval(o),n=a.timeLimit[d],H(),o=setInterval(()=>{n--,H()},1e3)}function W(e,t){p.textContent=e,p.className="word-feedback "+t,"error"===t&&M("error")}async function U(r){var n,e=[],t=r.length;for(n of c[t]){let t=0;for(let e=0;e<r.length&&(r[e]!==n[e]&&t++,!(1<t));e++);1===t&&e.push(n)}return e}function J(e={}){let t={particleCount:100,spread:70,origin:{y:.6},colors:["#ff0000","#00ff00","#0000ff","#ffff00","#ff00ff","#00ffff"]};confetti({...t,...e}),.5<Math.random()&&setTimeout(()=>{confetti({...t,...e,angle:180*Math.random()-90,origin:{x:Math.random(),y:.6}})},300)}T(),g=JSON.parse(localStorage.getItem("triviaMasterMuteState"))||!1,t&&(t.textContent=g?"volume_off":"volume_up"),g&&_(),e.addEventListener("click",()=>{S.clear(),T()}),B.addEventListener("click",async function(){if(!v||h>=a.maxHints)W("No more hints available","error");else{var e,r,n=(await U(m)).filter(e=>!N.has(e)&&(t=>{let r=0;for(let e=0;e<t.length;e++)t[e]===E[e]&&r++;return r>=((t,r)=>{let n=0;for(let e=0;e<t.length;e++)t[e]===r[e]&&n++;return n})(m,E)})(e));if(0<n.length){h++;var o=n[Math.floor(Math.random()*n.length)];let t=-1;for(let e=0;e<m.length;e++)if(m[e]!==o[e]){t=e;break}-1!==t?(k(t),W(`Try changing the ${n=t+1,e=["th","st","nd","rd"],r=n%100,n+(e[(r-20)%10]||e[r]||e[0])} letter to `+o[t],"info")):W("Try: "+o,"info"),R("hint_used","word_ladder","hint",h)}else W("No hints available for this step","error")}}),w&&w.addEventListener("click",()=>{g=!g,localStorage.setItem("triviaMasterMuteState",g),t&&(t.textContent=g?"volume_off":"volume_up"),g&&_(),M("select")}),document.addEventListener("DOMContentLoaded",()=>{initWordGame()})}export{initWordGame};
