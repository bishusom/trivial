function initWordGame(){var e=(()=>{var e=localStorage.getItem("wordLadderGameState");if(e)try{var t=JSON.parse(e);if(["easy","medium","hard"].includes(t.difficulty)&&"number"==typeof t.consecutiveWins&&"number"==typeof t.currentLevel)return t}catch(e){console.error("Invalid saved game state",e)}return null})();let E=e?.difficulty||"easy",N=e?.consecutiveWins||0,u=e?.currentLevel||1,O=0,S=0,A=null,f={wordLength:{easy:5,medium:6,hard:7},timeLimit:{easy:300,medium:240,hard:180},scorePerStep:{easy:50,medium:75,hard:100},bonusPerSecond:5,maxHints:3},I={4:["COLD","WARM","CORD","CARD","WARD","WORD","WORM","FARM","FIRE","FIVE","FINE","LINE","LION","LOAN","LOIN","RAIN","MAIN","MAID","MILD","MIND","BAND","LAND","SAND","HAND","FANS","PANS","TANS","CANS","BANS","RING","SING","WING","KING","PING","BONG","SONG","LONG","TONG","GONE","CONE","BONE","TONE","HONE","LOVE","MOVE","COVE","DOVE","ROVE","SAVE","WAVE","CAVE","GAVE","HAVE","LIVE","GIVE","DIVE","HIVE","JIVE","BARK","PARK","DARK","LARK","MARK","CAKE","FAKE","LAKE","MAKE","RAKE","TAKE","WAKE","SNAKE","STAKE","BALE","GALE","MALE","PALE","SALE"],5:["APPLE","AMPLY","AMBLE","ABLED","ABIDE","BRICK","TRICK","QUICK","SLICK","FLICK","CLICK","STICK","THICK","PRICK","CRACK","TRACK","STACK","BLACK","SLACK","SNACK","RINGS","SINGS","WINGS","KINGS","PINGS","BLOOM","GLOOM","BROOM","ROOMY","DOOMY","FLOOD","BLOOD","MOODY","GOODY","CANDY","HANDY","SANDY","BANDY","RANDY","SHINE","SPINE","TWINE","VINEY","WINEY","CLONE","DRONE","PRONE","STONE","PHONE","ALONE","BONES","CONES","TONES","HONES","ZONES","LOVES","MOVES","COVES","DOVES","ROVES","SAVES","WAVES","CAVES","GIVES","LIVES"],6:["CANNON","CANTON","CANTOR","CAPTOR","BLOOMS","GLOOMS","BROOMS","ROOMS","DOOMS","FLOODS","BLOODS","MOODS","GOODS","HOODS","WOODS","STANDS","BRANDS","GRANDS","HANDS","LANDS","SANDS","SHINES","SPINES","VINES","WINES","LINES","MINES","PINES","FINES","DINES","CLONES","DRONES","PRONES","STONES","PHONES","ZONES","ALONES","CONING","COMING","HOMING","FARMER","HARMER","WARMER","MARKET","PARKET","TICKET","PICKET","WICKET","CRYPTO","SCRIPT","BRIGHT","FLIGHT","SLIGHT","PLIGHT","NIGHTS","LIGHTS"]},h="",L="",m="",g=[],C=new Set,R=new Set,M=new Map,w=0,v=!1,T=-1,r=document.getElementById("current-word-display"),D=document.getElementById("letter-tiles"),p=document.getElementById("word-ladder-list"),n=document.getElementById("word-ladder-feedback");var e=document.getElementById("word-ladder-new"),d=document.getElementById("word-ladder-submit"),l=document.getElementById("word-ladder-hint");let i=document.getElementById("word-ladder-time"),s=document.getElementById("word-ladder-score"),c=document.getElementById("word-ladder-level"),y=document.getElementById("start-word"),K=document.getElementById("end-word");function G(e,t,r,n){"undefined"!=typeof gtag&&gtag("event",e,{event_category:t,event_label:r,value:n})}async function o(){console.log("Initializing Word Ladder game with state:",{difficulty:E,currentLevel:u,consecutiveWins:N}),clearInterval(A),S=f.timeLimit[E],O=0,g=[],C.clear(),M.clear(),w=0,v=!0,T=-1,r.innerHTML="",D.innerHTML="",b(p.innerHTML="","info"),P(),V(),t();var n,o=f.wordLength[E];try{var a=o;if(console.log("Fetching fb db for wordLength ",a),(a=await db.collection("wordLadders").where("length","==",a).limit(50).get()).empty)throw new Error("No word pairs found in Firebase");if(0===(a=a.docs.map(e=>{e=e.data();return{startWord:e.startWord?.toUpperCase(),endWord:e.endWord?.toUpperCase()}}).filter(e=>e.startWord&&e.endWord)).length)throw new Error("No valid word pairs in Firebase");var a=a[Math.floor(Math.random()*a.length)],e=(console.log(a),a.startWord+"-"+a.endWord);if(R.has(e))throw new Error("Pair already used");R.add(e),h=a.startWord,L=a.endWord,m=h,g.push(h),C.add(h),y.textContent=h,K.textContent=L,W(),B(),H(),Y(),G("word_ladder_game_started","word_ladder","start",1)}catch(e){console.error("Error using Firebase words:",e);{a=o;let e=I[a],t=!1,r=0;for(;!t&&r<50;){if(0===(await F(h=e[Math.floor(Math.random()*e.length)])).length);else{var d,l,i,s=[];for(d of e)d!==h&&(l=await(async(e,t,r)=>{if(((t,r)=>{let n=0;for(let e=0;e<t.length;e++)if(t[e]!==r[e]&&n++,1<n)return;return 1===n})(e,t))return[e,t];let n=[[e]],o=new Set([e]),a=0;for(;0<n.length&&a<1e3;){a++;var d=n.shift(),l=d[d.length-1];if(console.log(`Current path (${d.length}): `+d.join(" â†’ ")),l===t)return console.log(`Found path with ${d.length-1} steps`),d.length-1>=r?d:null;var i,s=await F(l);console.log(`Transformations from ${l}:`,s);for(i of s)o.has(i)||(o.add(i),n.push([...d,i]),console.log("Added to queue: "+i))}return console.log(`Pathfinding terminated after ${a} iterations`),null})(h,d,2))&&3<=l.length&&s.push(d);0<s.length&&(L=s[Math.floor(Math.random()*s.length)],i=h+"-"+L,R.has(i)||(t=!0,R.add(i)))}r++}if(!t){for(n of{4:[["COLD","CORD","CARD","WARD","WARM"],["FIRE","FIVE","FINE","LINE","LION"]],5:[["APPLE","AMPLY","AMBLE","ABLED","ABIDE"],["BRICK","TRICK","TRACK","TRUCK","TRUNK"]],6:[["CANNON","CANTON","CANTOR","CAPTOR"],["FARMER","HARMER","HAMMER","HUMMER","HUMPER"]]}[a]||[]){var c=n[0]+"-"+n[n.length-1];if(!R.has(c)){h=n[0],L=n[n.length-1],R.add(c),t=!0;break}}t||(h=I[a][0],L=I[a][1])}m=h,g.push(h),C.add(h),y.textContent=h,K.textContent=L,W(),B(),H(),Y(),G("word_ladder_game_started","word_ladder","start",1);return void await void 0}}}function W(){r.innerHTML="";for(let e=0;e<m.length;e++){var t=document.createElement("span");t.textContent=m[e],t.classList.add("letter-tile"),e===T&&t.classList.add("selected"),t.addEventListener("click",()=>{a(e)}),r.appendChild(t)}}function B(){if(D.innerHTML="",-1!==T)for(let e of"ABCDEFGHIJKLMNOPQRSTUVWXYZ"){var t=document.createElement("div");t.textContent=e,t.classList.add("letter-tile"),t.addEventListener("click",()=>{(async e=>{var t,r;-1!==T&&v&&(e=m.substring(0,T)+e+m.substring(T+1),console.log("newWord",e),await(async n=>{if(v)if(n.length!==m.length)b(`Word must be ${m.length} letters long`,"error");else if(n===m)b("Word must be different from current word","error");else if(C.has(n))b("Word already used in this ladder","error");else{let t=0;for(let e=0;e<m.length;e++)if(m[e]!==n[e]&&t++,1<t)return b("Only one letter can be changed at a time","error"),!1;let r=!1;if(M.has(n.toLowerCase()))r=M.get(n.toLowerCase());else try{var e=await fetch("https://api.dictionaryapi.dev/api/v2/entries/en/"+n.toLowerCase());r=e.ok,console.log(e),M.set(n.toLowerCase(),r)}catch(e){r=I[n.length].includes(n.toUpperCase()),M.set(n.toLowerCase(),r)}if(r)return!0;b("Not a valid English word","error")}return!1})(e))&&(m=e,g.push(e),C.add(e),t=f.scorePerStep[E],O+=t,P(),H(),e===L?(r=S*f.bonusPerSecond,O+=r,P(),clearInterval(A),v=!1,b(`You won! +${t} points + ${r} time bonus`,"success"),G("word_ladder_won","word_ladder","win",O),3<=++N?("easy"===E?(E="medium",b("Advanced to Medium level!","success")):"medium"===E?(E="hard",b("Advanced to Hard level!","success")):b("Mastered all levels!","success"),N=0,u++):b(`Great job! ${3-N} more wins to advance.`,"info"),r={difficulty:E,consecutiveWins:N,currentLevel:u},localStorage.setItem("wordLadderGameState",JSON.stringify(r)),V(),setTimeout(o,3e3)):b(`Valid: ${e} (+${t} points)`,"success"),T=-1,W(),B())})(e)}),D.appendChild(t)}}function a(e){T=e,W(),B()}function H(){p.innerHTML="",g.forEach(e=>{var t=document.createElement("li");t.textContent=e,p.appendChild(t)})}function P(){s.textContent="Score: "+O}function V(){c.textContent=`Level: ${u} (${E})`}function t(){var e=Math.floor(S/60),t=S%60;i.textContent=`Time: ${e}:`+t.toString().padStart(2,"0"),S<=0&&v&&(clearInterval(A),v=!1,b("Time's up!","error"),setTimeout(o,2e3))}function Y(){clearInterval(A),A=setInterval(()=>{S--,t()},1e3)}function b(e,t){n.textContent=e,n.className="word-feedback "+t}async function F(r){var n,e=[],t=r.length;for(n of I[t]){let t=0;for(let e=0;e<r.length&&(r[e]!==n[e]&&t++,!(1<t));e++);1===t&&e.push(n)}return e}o(),e.addEventListener("click",()=>{R.clear(),o()}),d.addEventListener("click",()=>{-1!==T?b("Please select a letter to change","error"):b("Select a letter to change","info")}),l.addEventListener("click",async function(){if(v&&!(w>=f.maxHints)){var e,r,n=(await F(m)).filter(e=>!C.has(e)&&(t=>{let r=0;for(let e=0;e<t.length;e++)t[e]===L[e]&&r++;return r>=((t,r)=>{let n=0;for(let e=0;e<t.length;e++)t[e]===r[e]&&n++;return n})(m,L)})(e));if(0<n.length){w++;var o=n[Math.floor(Math.random()*n.length)];let t=-1;for(let e=0;e<m.length;e++)if(m[e]!==o[e]){t=e;break}-1!==t?(a(t),b(`Try changing the ${n=t+1,e=["th","st","nd","rd"],r=n%100,n+(e[(r-20)%10]||e[r]||e[0])} letter to `+o[t],"info")):b("Try: "+o,"info"),G("hint_used","word_ladder","hint",w)}else b("No hints available for this step","error")}})}document.addEventListener("DOMContentLoaded",()=>{initWordGame()});export{initWordGame};
