let messages={gold:["🏆 Trivia Deity! The knowledge gods bow before you! Can you maintain your reign?","🧠 Mind = Blown! Think you can top this perfect score? Try again!","🤯 Unstoppable Genius! Ready for an even bigger challenge next round?","🎖️ Absolute Legend! The leaderboard needs your name again!"],silver:["✨ Brainiac Alert! One more round could push you to perfection!","🚀 Knowledge Rocket! You're just one launch away from trivia greatness!","💎 Diamond Mind! Polish your skills further with another game!","🧩 Puzzle Master! Can you complete the picture perfectly next time?"],bronze:["👍 Solid Effort! Your next attempt could be your breakthrough!","📚 Bookworm Rising! Every replay makes you wiser - try again!","💡 Bright Spark! Your knowledge is growing - fuel it with another round!","🏅 Contender Status! The podium is within reach - one more try!"],zero:["💥 Knowledge Explosion Incoming! Stick around - the next attempt will be better!","🎯 Fresh Start! Now that you've warmed up, the real game begins!","🔥 Fueling Curiosity! Your learning journey starts here - play again!","🚀 Launch Pad Ready! First attempts are just practice - try for real now!","🌱 Seeds of Knowledge Planted! Water them with another try!"],default:["🌱 Sprouting Scholar! Every replay makes you stronger - continue your journey!","🦉 Wise Owl in Training! The more you play, the wiser you become!","📖 Chapter 1 Complete! Turn the page to your next knowledge adventure!","🧭 Learning Compass Active! Your next game could be your true north!"]},els={game:()=>document.querySelector(".game-screen"),summary:()=>document.querySelector(".summary-screen"),question:()=>document.getElementById("question"),options:()=>document.getElementById("options"),nextBtn:()=>document.getElementById("next-btn"),score:()=>document.getElementById("score"),questionTimer:()=>document.getElementById("question-timer"),totalTimer:()=>document.getElementById("total-timer"),highscores:()=>document.querySelector(".highscores"),highscoresList:()=>document.getElementById("highscores-list"),resultMessage:()=>document.getElementById("result-message"),correctCount:()=>document.getElementById("correct-count"),timeUsed:()=>document.getElementById("time-used"),questionCounter:()=>document.getElementById("question-counter")},timers={quick:30,long:60},audio={tick:document.getElementById("tick-sound"),correct:document.getElementById("correct-sound"),wrong:document.getElementById("wrong-sound")},imageCache=(audio.tick.loop=!0,{}),state={isMuted:!1,questions:[],current:0,score:0,timeLeft:null,totalTime:null,timerId:null,totalTimerId:null,highScores:[],answers:[],isScoreSaved:!1,isNextPending:!1,selectedQuestions:10,usedQuestions:new Set,fbUsedQuestions:JSON.parse(localStorage.getItem("fbUsedQuestions")||"[]"),fbUsedQuizIds:JSON.parse(localStorage.getItem("fbUsedQuizIds")||"[]"),isTimedMode:!0,timerDuration:"long"},nlp,QUIZ_TYPES=("undefined"!=typeof window&&window.nlp?(nlp=window.nlp,console.log("Found nlp")):(nlp={nouns:()=>({out:()=>[]}),adjectives:()=>({out:()=>[]})},console.log("Creating home-grown nlp")),{DAILY:"daily",WEEKLY:"weekly",MONTHLY:"monthly"}),CACHE={QUESTIONS:"trivia-questions-v1",EXPIRY:864e5};function trackEvent(e,t,s,o){"undefined"!=typeof gtag&&gtag("event",e,{event_category:t,event_label:s,value:o})}function toggleClass(e,t,s){e?.classList?.[t]?.(s)}function playSound(t){state.isMuted?console.log(`Sound ${t} skipped: muted`):(console.log("Playing sound: "+t),audio[t].play().catch(e=>console.error(`Error playing ${t} sound:`,e)))}function stopSound(e){console.log("Stopping sound: "+e),audio[e].pause(),audio[e].currentTime=0}function stopAllSounds(){console.log("Stopping all sounds"),["tick","correct","wrong"].forEach(e=>stopSound(e))}function loadMuteState(){state.isMuted=JSON.parse(localStorage.getItem("triviaMasterMuteState"))||"false";var e=localStorage.getItem("triviaMasterTimedMode"),e=(state.isTimedMode=null===e||JSON.parse(e),localStorage.getItem("triviaMasterTimerDuration")),e=(state.timerDuration=null!==e?e:"long",document.querySelector("#mute-btn .material-icons"));e&&(e.textContent=state.isMuted?"volume_off":"volume_up"),state.isMuted&&stopAllSounds()}function showError(e){let t=document.getElementById("error-message");t||((t=document.createElement("div")).id="error-message",t.className="error-message",t.innerHTML=`<div id="error-text">${e}</div><button id="retry-btn" class="btn small primary">Retry</button>`,els.game().appendChild(t),document.getElementById("retry-btn").addEventListener("click",()=>{initTriviaGame(state.questions[0]?.category||"general knowledge")})),t.classList.remove("hidden")}function getWeekNumber(e){var e=new Date(e),t=(e.setHours(0,0,0,0),e.setDate(e.getDate()+3-(e.getDay()+6)%7),new Date(e.getFullYear(),0,4));return 1+Math.round(((e-t)/864e5-3+(t.getDay()+6)%7)/7)}async function updatePlayerCount(e){try{var t=db.collection("playerCounts").doc(e),s=await t.get(),o=(s.exists?s.data().count:0)+1;await t.set({count:o,lastUpdated:firebase.firestore.FieldValue.serverTimestamp(),category:e},{merge:!0}),console.log("Updating player count: ",o)}catch(e){return console.error("Error updating player count:",e),Math.floor(40*Math.random())+100}}function extractKeywordNLP(e){var t=nlp(e),s=t.nouns().out("array");return 0<s.length||0<(s=t.adjectives().out("array")).length?s[0]:(t=e.replace("?","").split(" ")).find(e=>3<e.length)||t[0]}async function fetchImage(e){if(imageCache[e])return imageCache[e];console.log("Fetching image for ",e);try{var t=await fetch("/.netlify/functions/get-image?keyword="+encodeURIComponent(e));if(!t.ok)throw new Error("HTTP error! status: "+t.status);console.log(t);var s,o=t.headers.get("content-type");if(o&&o.includes("application/json"))return(s=await t.json()).url?(imageCache[e]=s.url,s.url):null;throw new Error("Invalid content type")}catch(e){return console.error("Error fetching image:",e),null}}async function fetchQuestions(e){try{return console.log("Fetching questions for category:",e),[QUIZ_TYPES.DAILY,QUIZ_TYPES.WEEKLY,QUIZ_TYPES.MONTHLY].includes(e.toLowerCase())?await fetchfbQuiz(e.toLowerCase()):await fetchfbQuestions(e)}catch(e){throw console.error("Error in fetchQuestions:",e),showError(e.message||"Failed to load questions."),e}}async function fetchfbQuiz(t){if("daily"===t){let e=new Date;let t="fb-daily-quiz-"+e.toISOString().split("T")[0],s=JSON.parse(localStorage.getItem("fbdailyQuizCache"))?.[t];var a=new Date;if(a.setHours(24,0,0,0),s&&e<a)return shuffle(s.questions);let o=(await db.collection("basic_intro_questions").where("randomIndex",">=",Math.floor(900*Math.random())).orderBy("randomIndex").limit(5).get()).docs.map(e=>({id:e.id,question:decodeHTML(e.data().question),correct:decodeHTML(e.data().correct_answer),options:shuffle([...e.data().incorrect_answers.map(decodeHTML),decodeHTML(e.data().correct_answer)]),category:"daily",difficulty:e.data().difficulty||"medium",titbits:e.data().titbits||"",image_keyword:e.data().image_keyword||null})).slice(0,5);return localStorage.setItem("fbdailyQuizCache",JSON.stringify({...JSON.parse(localStorage.getItem("fbdailyQuizCache")||"{}"),[t]:{questions:o,timestamp:e.getTime()}})),shuffle(o)}let e=new Date;a=t===QUIZ_TYPES.WEEKLY?`week-${getWeekNumber(e)}-`+e.getFullYear():`month-${e.getMonth()+1}-`+e.getFullYear();let s="fb-quiz-"+a,o=JSON.parse(localStorage.getItem("fbQuizCache"))?.[s];if(o&&Date.now()-o.timestamp<CACHE.EXPIRY&&!state.fbUsedQuizIds.includes(s))return shuffle(o.questions);a=await db.collection("quizzes").doc(t.toLowerCase()).collection("periods").doc(a).get();if(!a.exists)throw new Error(`No ${t} quiz available.`);let n=a.data().questions.map(e=>({id:CryptoJS.MD5(e.question+e.correct_answer).toString(),question:e.question,correct:e.correct_answer,options:shuffle([...e.incorrect_answers,e.correct_answer]),category:t,subcategory:e.subcategory||"",difficulty:e.difficulty||"medium",titbits:e.titbits||"",image_keyword:e.image_keyword||null}));return localStorage.setItem("fbQuizCache",JSON.stringify({...JSON.parse(localStorage.getItem("fbQuizCache")||"{}"),[s]:{questions:n,timestamp:Date.now()}})),state.fbUsedQuizIds.push(s),localStorage.setItem("fbUsedQuizIds",JSON.stringify(state.fbUsedQuizIds)),shuffle(n)}async function fetchfbQuestions(e,t=10){var s=e.toLowerCase(),s=(console.log("Fetching questions for category:",e),"fb_questions-"+s),o=JSON.parse(localStorage.getItem("fbQuestionsCache"))?.[s];if(o&&o.questions.length>=t&&o.questions.filter(e=>!state.fbUsedQuestions.includes(e.id)).length>=t)return console.log("Using cached questions:",o.questions),processfbQuestions(o.questions,t);let a=db.collection("triviaMaster").doc("questions").collection("items");o=await(a=(a="general knowledge"!==e?a.where("category","==",e):a).where("randomIndex",">=",Math.floor(900*Math.random())).orderBy("randomIndex").limit(2*t)).get();return o.empty?(console.warn(`No questions found for ${e}, falling back to general knowledge`),showError(`No questions available for ${e}. Loading general knowledge instead.`),fetchfbQuestions("general knowledge",t)):(e=o.docs.map(e=>({id:e.id,question:decodeHTML(e.data().question),correct:decodeHTML(e.data().correct_answer),options:shuffle([...e.data().incorrect_answers.map(decodeHTML),decodeHTML(e.data().correct_answer)]),category:e.data().category,subcategory:e.data().subcategory||"",difficulty:e.data().difficulty||"medium",titbits:e.data().titbits||"",image_keyword:e.data().image_keyword||null})),console.log("Fetched questions:",e),localStorage.setItem("fbQuestionsCache",JSON.stringify({...JSON.parse(localStorage.getItem("fbQuestionsCache")||"{}"),[s]:{questions:e,timestamp:Date.now()}})),processfbQuestions(e,t))}function processfbQuestions(e,t){e=e.filter(e=>!state.fbUsedQuestions.includes(e.id)),t=shuffle(e).slice(0,Math.min(t,e.length));return state.fbUsedQuestions.push(...t.map(e=>e.id)),localStorage.setItem("fbUsedQuestions",JSON.stringify(state.fbUsedQuestions.slice(-500))),t.map(e=>({...e,options:shuffle([...e.options]),image_keyword:e.image_keyword||null}))}function decodeHTML(e){var t=document.createElement("textarea");return t.innerHTML=e,t.value}function shuffle(e){var t=[...e];for(let e=t.length-1;0<e;e--){var s=Math.floor(Math.random()*(e+1));[t[e],t[s]]=[t[s],t[e]]}return t}function toInitCaps(e){return e.replace(/\w\S*/g,e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase())}function updateTimerUI(){state.timeLeft=state.isTimedMode?timers[state.timerDuration]:null,state.totalTime=state.isTimedMode?state.selectedQuestions*state.timeLeft:null;var e=els.questionTimer()?.parentElement,t=els.totalTimer()?.parentElement;state.isTimedMode?(toggleClass(e,"remove","hidden"),toggleClass(t,"remove","hidden"),els.questionTimer()&&(els.questionTimer().textContent=state.timeLeft),els.totalTimer()&&(els.totalTimer().textContent=Math.floor(state.totalTime/60)+":"+(state.totalTime%60).toString().padStart(2,"0"))):(toggleClass(e,"add","hidden"),toggleClass(t,"add","hidden"),els.questionTimer()&&(els.questionTimer().textContent="N/A"),els.totalTimer()&&(els.totalTimer().textContent="N/A"))}function initTriviaGame(e){"daily"===e?(state.isTimedMode=!0,state.timerDuration="quick",state.selectedQuestions=5,localStorage.setItem("triviaMasterTimedMode","true"),localStorage.setItem("triviaMasterTimerDuration","quick"),messages.zero=["Don't worry! These were starter questions.","Everyone starts somewhere! Try again?","Basic knowledge builds up over time!","Ready for another quick try?"]):(state.isTimedMode=JSON.parse(localStorage.getItem("triviaMasterTimedMode"))||!0,state.timerDuration=localStorage.getItem("triviaMasterTimerDuration")||"long"),els.game().classList.add("active"),els.game().classList.remove("hidden"),els.summary().classList.remove("active"),console.log("Initializing game for category:",e),trackEvent("game_start","game",e,1),state.questions=[],state.current=0,state.score=0,state.answers=[],state.isScoreSaved=!1,state.isNextPending=!1,updateTimerUI(),els.score().textContent="0",loadMuteState(),updatePlayerCount(e),fetchQuestions(e).then(e=>{state.questions=e,showQuestion()}).catch(e=>{console.error("Error fetching questions:",e),showError(e.message||"Failed to load questions.")}),setupEvents()}async function showQuestion(){toggleClass(document.querySelector(".app-footer"),"add","hidden"),els.question().classList.remove("correct-bg","wrong-bg");let s=state.questions[state.current];if(!s)return endGame();var t="general knowledge"===s.category?"general knowledge":toInitCaps(s.category);els.question().innerHTML="",els.question().innerHTML='<div class="question-loading">Loading question...</div>';try{var o=s.image_keyword||extractKeywordNLP(s.question),a=await fetchImage(o);let e="";a&&(e+=`
                <div class="question-image-container">
                    <img src="${a}" alt="${o}" class="question-image">
                </div>
            `),e+=`
            <div class="question-text">${s.question}</div>
            <div class="question-meta">
                <div class="question-category">${t}${s.difficulty?`<span class="question-difficulty ${s.difficulty}">${toInitCaps(s.difficulty)}</span>`:""}</div>
                ${s.subcategory?`<div class="question-subcategory">${s.subcategory}</div>`:""}
            </div>
        `,els.question().innerHTML=e}catch(e){console.error("Error loading question image:",e),els.question().innerHTML=`
            <div class="question-text">${s.question}</div>
            <div class="question-meta">
                <div class="question-category">${t}${s.difficulty?`<span class="question-difficulty ${s.difficulty}">${toInitCaps(s.difficulty)}</span>`:""}</div>
                ${s.subcategory?`<div class="question-subcategory">${s.subcategory}</div>`:""}
            </div>
        `}els.options().innerHTML=s.options.map((e,t)=>`<button style="animation-delay: ${.1*t}s" data-correct="${e===s.correct}">${e}</button>`).join(""),els.questionCounter()&&(els.questionCounter().textContent=state.current+1+"/"+state.selectedQuestions),toggleClass(els.game(),"add","active"),toggleClass(els.summary(),"remove","active"),els.questionTimer().textContent=state.isTimedMode?state.timeLeft:"N/A",els.totalTimer().textContent=state.isTimedMode?Math.floor(state.totalTime/60)+":"+(state.totalTime%60).toString().padStart(2,"0"):"N/A",setupOptionEvents(),startTimer()}function setupOptionEvents(){var e=els.options();e?(e.querySelectorAll("button").forEach(e=>{e.removeEventListener("click",handleOptionClick),e.addEventListener("click",handleOptionClick)}),els.nextBtn().classList.remove("visible")):console.error("Options container (#options) not found in DOM")}function handleOptionClick(e){console.log("Option button clicked:",e.target.textContent,"data-correct:",e.target.dataset.correct),checkAnswer("true"===e.target.dataset.correct)}function startTimer(){clearInterval(state.timerId),clearInterval(state.totalTimerId),state.isTimedMode?(state.timeLeft=timers[state.timerDuration],state.totalTime=state.selectedQuestions*state.timeLeft,els.questionTimer().textContent=state.timeLeft,els.totalTimer().textContent=Math.floor(state.totalTime/60)+":"+(state.totalTime%60).toString().padStart(2,"0"),state.timerId=setInterval(()=>{--state.timeLeft<=0&&(clearInterval(state.timerId),handleTimeout()),els.questionTimer().textContent=state.timeLeft},1e3),state.totalTimerId=setInterval(()=>{--state.totalTime<=0&&clearInterval(state.totalTimerId),els.totalTimer().textContent=Math.floor(state.totalTime/60)+":"+(state.totalTime%60).toString().padStart(2,"0")},1e3),state.isMuted||playSound("tick")):(els.questionTimer().textContent="N/A",els.totalTimer().textContent="N/A")}function handleTimeout(){state.isTimedMode&&(els.question().classList.add("wrong-bg"),checkAnswer(!1))}function checkAnswer(e){stopSound("tick"),playSound(e?"correct":"wrong"),state.answers.push({correct:e}),clearInterval(state.timerId),clearInterval(state.totalTimerId);var t=els.question(),e=(t.classList.remove("correct-bg","wrong-bg"),t.classList.add(e?"correct-bg":"wrong-bg"),els.options().querySelectorAll("button").forEach(e=>{e.disabled=!0,e.classList.add("true"===e.dataset.correct?"correct":"wrong")}),e&&state.isTimedMode&&(state.score+=10*state.timeLeft),els.score().textContent=state.score,state.questions[state.current]),s=t.querySelector(".question-titbits");s&&s.remove(),e.titbits&&((s=document.createElement("div")).className="question-titbits",s.innerHTML='<span class="titbits-icon">💡</span> Fun Fact: '+e.titbits,t.appendChild(s)),state.current<state.selectedQuestions-1?(els.nextBtn().classList.add("visible"),state.isNextPending=!0,state.isTimedMode&&setTimeout(()=>{state.isNextPending&&handleNextQuestion()},2e3)):setTimeout(endGame,1e3)}function handleNextQuestion(){state.isNextPending&&(state.isNextPending=!1,els.nextBtn().classList.remove("visible"),(state.current++<state.selectedQuestions-1?showQuestion:endGame)())}async function endGame(){console.log("Starting endGame, answers:",state.answers.length,"questions:",state.selectedQuestions),window.endGame=endGame;trackEvent("game_complete","performance",`${state.answers.filter(e=>e.correct).length}/${state.selectedQuestions} correct`,state.score);var t=els.game(),s=els.summary(),o=els.highscores();if(t&&s&&o){console.log("Removing active from game-screen, adding active to summary-screen, showing highscores"),t.classList.add("hidden"),s.classList.add("active"),o.classList.remove("hidden"),document.querySelector(".app-footer")?.classList.remove("hidden"),clearInterval(state.timerId),clearInterval(state.totalTimerId),stopAllSounds();var a=state.questions[0]?.category||"general knowledge";let e=null;try{var n=await db.collection("scores").where("category","==",a).orderBy("score","desc").limit(1).get();console.log(n),e=n.empty?null:n.docs[0].data()}catch(e){console.error("endGame: Error fetching global high score:",e)}try{saveHighScore()}catch(e){console.error("endGame: Error in saveHighScore:",e)}try{await showSummary(e)}catch(e){console.error("endGame: Error in showSummary:",e)}"daily"===state.questions[0]?.category?(a=document.querySelector(".action-buttons"))&&(a.innerHTML=`
                <div class="progress-message">
                    <p>You've completed today's daily challenge!</p>
                    <p>New questions in <span id="daily-reset-timer"></span></p>
                    <button id="upgrade-btn" class="btn primary">Try Regular Quiz</button>
                </div>
            `,(n=document.getElementById("upgrade-btn"))&&n.addEventListener("click",()=>{state.isTimedMode=!1,state.selectedQuestions=10,localStorage.removeItem("triviaMasterTimedMode"),localStorage.removeItem("triviaMasterTimerDuration"),initTriviaGame("general knowledge")}),updateDailyResetTimer(),setInterval(updateDailyResetTimer,1e3)):(a=document.querySelector(".action-buttons"))&&(a.innerHTML=`
                <button class="btn primary" id="restart-btn">
                    <span class="material-icons">replay</span>Play Again
                </button>
            `,n=document.getElementById("restart-btn"))&&n.addEventListener("click",restartGame)}else console.error("DOM elements missing:",{gameScreen:!!t,summaryScreen:!!s,highscores:!!o})}function updateDailyResetTimer(){var e=new Date,t=new Date,t=(t.setHours(24,0,0,0),t-e),e=Math.floor(t/36e5),t=Math.floor(t%36e5/6e4),s=document.getElementById("daily-reset-timer");s&&(s.textContent=e+`h ${t}m`)}function restartGame(){trackEvent("restart_game","navigation","from_summary"),state.usedQuestions.clear(),state.questions=[],state.current=0,state.score=0,state.answers=[],updateTimerUI(),els.score().textContent="0",els.totalTimer().textContent=state.isTimedMode?Math.floor(state.totalTime/60)+":"+(state.totalTime%60).toString().padStart(2,"0"):"N/A",els.game().classList.remove("hidden"),els.game().classList.add("active"),els.summary().classList.remove("active"),els.highscores().classList.add("hidden"),localStorage.removeItem(CACHE.QUESTIONS),initTriviaGame(state.questions[0]?.category||"general knowledge")}async function showSummary(e){console.log("Starting showSummary, globalHigh:",e);var t=state.isTimedMode?state.selectedQuestions*timers[state.timerDuration]-state.totalTime:0,s=state.answers.filter(e=>e.correct).length,o=state.questions[0]?.category||"general knowledge";let a,n;n=0===s?a="zero":s>=.9*state.selectedQuestions?a="gold":s>=.7*state.selectedQuestions?a="silver":a="bronze";var i=messages[a][Math.floor(Math.random()*messages[a].length)],r=els.highscoresList();if(r){var l=document.querySelector(".performance-message"),l=(l&&l.classList.add(n),r.innerHTML='<div class="loading-indicator"><div class="loading-spinner"></div><p>Loading high scores...</p></div>',els.correctCount()),r=els.timeUsed(),c=els.resultMessage();if(l&&r&&c){console.log("Updating summary: correctCount=",s,"timeUsed=",t,"message=",i),l.textContent=s+"/"+state.selectedQuestions,r.textContent=state.isTimedMode?`${Math.floor(t/60)}m ${(t%60).toString().padStart(2,"0")}s`:"N/A",c.innerHTML=i,e&&(console.log("Adding global high score:",e),c.insertAdjacentHTML("afterend",`
            <div class="global-high-score">
                <div class="global-high-details">
                    <div class="global-high-text"> 🏆 Global High in ${toInitCaps(o)}: ${e.score} by ${e.name}</div>
                </div>
            </div>
            ${e.score>state.score?`<div class="motivation-text">You're ${e.score-state.score} points behind the leader!</div>`:'<div class="global-champion-message">🎉 You beat the global high score! Submit your score to claim the crown!</div>'}
        `)),document.getElementById("total-score").textContent=state.score,els.highscoresList().innerHTML=state.highScores.length?state.highScores.map((e,t)=>`
            <div class="highscore-entry compact">
                <span class="name">${t+1}. ${e.name}</span>
                <span class="score">${e.score}</span>
            </div>
        `).join(""):'<p class="no-scores">No high scores yet</p>';s=document.getElementById("restart-btn");s?(s.removeEventListener("click",restartGame),s.addEventListener("click",restartGame),console.log("Restart button event listener set")):console.error("Restart button (#restart-btn) not found in DOM"),els.highscores().classList.remove("hidden"),localStorage.setItem("gamesPlayed",parseInt(localStorage.getItem("gamesPlayed")||"0")+1);try{await updateHighScores(),console.log("High scores updated")}catch(e){console.error("showSummary: Error updating high scores:",e)}}else console.error("Summary elements missing:",{correctCount:!!l,timeUsed:!!r,resultMessage:!!c})}else console.error("Highscores list (#highscores-list) not found in DOM")}async function saveHighScore(){var e,t;!state.isScoreSaved&&state.score&&(e=state.questions[0]?.category||"general knowledge",t=prompt("Enter your name:","Anonymous")||"Anonymous",await db.collection("scores").add({name:t,score:state.score,category:e,timestamp:firebase.firestore.Timestamp.now()}),state.isScoreSaved=!0,updateHighScores())}async function updateHighScores(){var t=els.highscoresList();if(t){var e=state.questions[0]?.category||"general knowledge";try{var s=await db.collection("scores").where("category","==",e).orderBy("score","desc").limit(5).get();state.highScores=s.docs.map(e=>e.data()),t.innerHTML=state.highScores.length?state.highScores.map((e,t)=>`
                <div class="highscore-entry">
                    <span class="rank">${t+1}.</span>
                    <span class="name">${e.name}</span>
                    <span class="score">${e.score}</span>
                </div>
            `).join(""):'<p class="no-scores">No high scores yet for this category. Play a game to start!</p>'}catch(e){console.error("updateHighScores: Error fetching global high scores:",e),t.innerHTML='<p class="no-scores">Error loading high scores. Please try again later.</p>'}}}function setupEvents(){var e=document.getElementById("next-btn");e&&e.addEventListener("click",handleNextQuestion);let t=document.getElementById("mute-btn");t&&t.addEventListener("click",()=>{state.isMuted=!state.isMuted,localStorage.setItem("triviaMasterMuteState",state.isMuted);var e=t.querySelector(".material-icons");e&&(e.textContent=state.isMuted?"volume_off":"volume_up"),state.isMuted?stopAllSounds():els.game().classList.contains("active")&&state.isTimedMode&&playSound("tick")});e=document.getElementById("settings-btn");let s=document.getElementById("settings-panel"),o=document.getElementById("timed-mode"),a=document.getElementById("mode-label");var n=document.getElementById("save-settings-btn"),i=document.getElementById("close-settings-btn");let r=document.getElementById("timer-duration");e&&s&&e.addEventListener("click",()=>{toggleClass(s,"remove","hidden"),o&&(o.checked=state.isTimedMode),a&&(a.textContent=state.isTimedMode?"Timed":"Non-Timed"),r&&(r.value=state.timerDuration,r.parentElement.style.display=state.isTimedMode?"flex":"none")}),o&&o.addEventListener("change",()=>{console.log("Timed mode toggled to:",o.checked),a.textContent=o.checked?"Timed":"Non-Timed",r&&(r.parentElement.style.display=o.checked?"flex":"none")}),n&&n.addEventListener("click",()=>{var e=o?o.checked:state.isTimedMode,t=r?r.value:state.timerDuration;e===state.isTimedMode&&t===state.timerDuration||(state.isTimedMode=e,state.timerDuration=t,localStorage.setItem("triviaMasterTimedMode",state.isTimedMode),localStorage.setItem("triviaMasterTimerDuration",state.timerDuration),state.current=0,updateTimerUI(),showQuestion()),toggleClass(s,"add","hidden")}),i&&i.addEventListener("click",()=>{toggleClass(s,"add","hidden")})}function setupStartQuizListener(){console.log("Setting up startQuiz listener"),document.addEventListener("startQuiz",e=>{var{category:e,isTimedMode:t}=e.detail;console.log("Received startQuiz event:",{category:e,isTimedMode:t}),state.isTimedMode=t,initTriviaGame(e)})}document.addEventListener("DOMContentLoaded",()=>{var e;console.log("trivia.js DOMContentLoaded"),setupStartQuizListener(),loadMuteState(),window.location.pathname.includes("catalog.html")||initTriviaGame(1<(e=window.location.pathname.split("/").filter(e=>e)).length?e[1].replace(/-/g," "):"general knowledge")});export{initTriviaGame};
